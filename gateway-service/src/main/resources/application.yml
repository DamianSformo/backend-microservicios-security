spring:
  application:
    name: gateway-service
  security:
    oauth2:
      client:
        provider:
          microservicios:
            issuer-uri: http://localhost:8082/realms/DigitalMedia
            jwkSetUri: http://localhost:8082/realms/DigitalMedia/protocol/openid-connect/certs
        registration:
          gateway-service:
            provider: microservicios
            client-id: microservicios
            client-secret: vk2JShO3N43msLTfmQ1Q5VEjow6QS0S2
            authorization-grant-type: authorization_code
            redirect-uri: 'http://localhost:8050/login/oauth2/code/keycloak'

server:
  port: 8050

  cloud:
    gateway:
      routes:
        - id: movieRoute
          uri: lb://movie-service
          predicates:
            - Path=/movies/**
          filters:
            - StripPrefix=2
        - id: userRoute
          uri: lb://user-service
          predicates:
            - Path=/users/**
          filters:
            - StripPrefix=2
      default-filters:
        - TokenRelay

eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetchRegistry: true


management:
  endpoints:
    web:
      exposure:
        include: '*'
